name: go-workflow
on:
  push:
    # branches:
    #   - master
  pull_request:
jobs:
  golang-tests:
    name: tests
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      matrix:
        go-version: ["1.15", "1.14", "1.13"]
        go111module: ["on", "off"]
    env:
      GO111MODULE: ${{ matrix.go111module }}
      GOFLAGS: -mod=readonly
      GOPATH: ${{ github.workspace }}
    defaults:
      run:
        working-directory: ${{ env.GOPATH }}/src/github.com/getsentry/sentry-go
    steps:
      - uses: actions/checkout@v2
        with:
          path: ${{ env.GOPATH }}/src/github.com/getsentry/sentry-go
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version}}
      - name: Remove if Go Module mode
        run: |
          if [[ $GO111MODULE == off ]]; then
            # Iris is not supported in legacy GOPATH mode. We delete the source code
            # because otherwise lint, build, and test steps would fail.
            rm -vrf ./iris/ ./example/iris/
            # go get is not required in Module mode
            GOFLAGS="-mod=readonly" go get -v -t ./...
          fi
      - name: Build
        run: go build ./...
      - name: Tests
        run: |
          go test ./...
          go test ./... -race
  golang-lint:
    name: lint
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      matrix:
        go-version: ["1.15", "1.14", "1.13"]
    env:
        GOPATH: ${{ github.workspace }}
    defaults:
      run:
        working-directory: ${{ env.GOPATH }}/src/github.com/getsentry/sentry-go
    steps:
      - uses: actions/checkout@v2
        with:
          path: ${{ env.GOPATH }}/src/github.com/getsentry/sentry-go
          # We must fetch at least the immediate parents so that if this is
          # a pull request then we can checkout the head.
          fetch-depth: 2
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version}}
      - name: Lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/v1.27.0/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.27.0
          git remote -v
          # git fetch origin master:remotes/origin/master
          git fetch https://github.com/getsentry/sentry-go.git master:remotes/upstream/master
          $(go env GOPATH)/bin/golangci-lint run --new-from-rev=$(git merge-base upstream/master HEAD)
      